<Page
    x:Class="Neptunium.View.AppShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:con="using:Neptunium.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Neptunium.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tk="using:WinRTXamlToolkit.Controls"
    xmlns:uwp="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:wst="using:WindowsStateTriggers"
    x:Name="ShellPage"
    Loaded="Page_Loaded"
    mc:Ignorable="d">

    <Grid x:Name="RootGrid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition MaxHeight="50" Height="Auto"/>
            <RowDefinition Height="*" />
            <RowDefinition MaxHeight="65" Height="Auto" />
        </Grid.RowDefinitions>

        <Grid x:Name="topAppBar"
              Grid.Row="0"
              Height="50"
              Background="{ThemeResource SystemControlBackgroundAccentBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>


            <Grid Grid.Column="0" RequestedTheme="Dark">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ToggleButton
                        Grid.Column="0"
                        x:Name="TogglePaneButton"
                        AutomationProperties.Name="Menu"
                        Checked="TogglePaneButton_Checked"
                        Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                        Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                        TabIndex="1"
                        ToolTipService.ToolTip="Menu"
                        Unchecked="TogglePaneButton_Unchecked" />

                <TextBlock Name="PageTitleBlock" Grid.Column="1" VerticalAlignment="Center"
                           Style="{ThemeResource BaseTextBlockStyle}" />
            </Grid>
        </Grid>

        <SplitView Grid.Row="1"
                   x:Name="RootSplitView"
                   Margin="0,0,0,0"
                   DisplayMode="CompactInline">
            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="RootSplitViewPaneStackPanel" Grid.Row="0">
                        <StackPanel.Resources>
                            <Style BasedOn="{StaticResource SplitViewTextBlockStyle}" TargetType="TextBlock" />
                            <Style BasedOn="{StaticResource SplitViewRadioButtonStyle}" TargetType="RadioButton" />
                        </StackPanel.Resources>

                        <ItemsControl x:Name="SplitViewNavigationList">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <RadioButton
                                        Click="RadioButton_Click"
                                        Command="{Binding Command, Mode=OneTime}"
                                        Content="{Binding DisplayText, Mode=OneTime}"
                                        GroupName="Navigation"
                                        IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        Style="{StaticResource SplitViewRadioButtonStyle}">
                                        <RadioButton.Tag>
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                FontSize="{StaticResource SplitViewLargeNavFontSize}"
                                                Text="{Binding Symbol, Mode=OneTime}" />
                                        </RadioButton.Tag>
                                    </RadioButton>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!--  font family = Segoe MDL2 Assets  -->
                        <!--<RadioButton GroupName="Navigation" Style="{StaticResource SplitViewRadioButtonStyle}" Content="Stations"
                                 Command="{Binding GoToStationsViewCommand}" x:Name="stationsNavButton">
                            <RadioButton.Tag>
                                <TextBlock Text="" FontSize="{StaticResource SplitViewLargeNavFontSize}" />
                            </RadioButton.Tag>
                        </RadioButton>-->

                        <StackPanel Grid.Row="1">
                            <StackPanel.Resources>
                                <Style BasedOn="{StaticResource SplitViewTextBlockStyle}" TargetType="TextBlock" />
                            </StackPanel.Resources>

                            <Button
                                x:Name="FeedbackButton"
                                Click="FeedbackButton_Click"
                                Content="Feedback"
                                Style="{StaticResource SplitViewButtonStyle}"
                                Visibility="Collapsed">
                                <Button.Tag>
                                    <TextBlock FontSize="{StaticResource SplitViewLargeNavFontSize}" Text="" />
                                </Button.Tag>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </SplitView.Pane>
            <SplitView.Content>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Frame x:Name="InlineFrame" Grid.Row="1" Grid.RowSpan="1">
                        <Frame.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition />
                            </TransitionCollection>
                        </Frame.Transitions>
                        <Frame.ContentTransitions>
                            <TransitionCollection>
                                <NavigationThemeTransition>
                                    <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                        <EntranceNavigationTransitionInfo />
                                    </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                </NavigationThemeTransition>
                            </TransitionCollection>
                        </Frame.ContentTransitions>
                    </Frame>

                    <!--defined second so that it has a higher z-index-->
                    <Grid x:Name="snackBarGrid" Grid.Row="1" Grid.RowSpan="1" VerticalAlignment="Bottom">
                        <Grid.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition />
                            </TransitionCollection>
                        </Grid.Transitions>
                    </Grid>
                </Grid>
            </SplitView.Content>
        </SplitView>

        <Grid x:Name="bottomAppBar" 
              Grid.Row="2" 
              Height="85"
              RequestedTheme="Dark"
              Visibility="Collapsed"
              Background="{ThemeResource SystemControlBackgroundAccentBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>


            <Grid Grid.Column="0" Padding="0">
                <Button Style="{x:Null}" 
                        Background="Transparent" 
                        x:Name="NowPlayingButton" 
                        Height="85"
                        HorizontalAlignment="Stretch"
                        Margin="0 0 0 0"
                        Click="NowPlayingButton_Click"
                        HorizontalContentAlignment="Stretch">
                    <Grid HorizontalAlignment="Stretch">

                        <Grid.ChildrenTransitions>
                            <TransitionCollection>
                                <RepositionThemeTransition />
                            </TransitionCollection>
                        </Grid.ChildrenTransitions>

                        <Grid VerticalAlignment="Center" Margin="10 -5 10 0" RequestedTheme="Dark">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition Height="20" />
                                <RowDefinition Height="20" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Text="{Binding Track, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{ThemeResource SubtitleTextBlockStyle}"
                                       Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                            <TextBlock Grid.Row="1" Text="{Binding Artist, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{ThemeResource BaseTextBlockStyle}"
                                       Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"/>
                            <TextBlock Grid.Row="2"
                                       Style="{ThemeResource CaptionTextBlockStyle}"
                                       Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}">
                                <Span>
                                    <Run Text="{Binding StationPlayedOn, UpdateSourceTrigger=PropertyChanged}" />
                                    <Run Text="·" />
                                    <Run Text="{Binding RadioProgram, UpdateSourceTrigger=PropertyChanged}" />
                                </Span>
                            </TextBlock>
                        </Grid>

                    </Grid>
                    <!--<Button.ContextFlyout>
                        <Flyout>
                            <Grid Width="300">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="Now Playing" Style="{ThemeResource TitleTextBlockStyle}" />

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="60" />
                                        <ColumnDefinition Width="60" />
                                    </Grid.ColumnDefinitions>

                                    <uwp:ImageEx
                                        x:Name="NowPlayingImage"
                                        Grid.Column="0"
                                        Visibility="Visible"
                                        Height="60"
                                        VerticalAlignment="Center"
                                        Source="{Binding StationLogo, UpdateSourceTrigger=PropertyChanged}"
                                        IsCacheEnabled="True" />

                                    <AppBarButton Grid.Column="1" Icon="Find" />
                                </Grid>
                            </Grid>
                        </Flyout>
                    </Button.ContextFlyout>-->
                </Button>
            </Grid>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="1">
                <AppBarButton Icon="Play" Name="PlayButton" Label="Play" 
                              Command="{Binding ResumePlaybackCommand, UpdateSourceTrigger=PropertyChanged}" />
                <AppBarButton Icon="OpenWith" ToolTipService.ToolTip="Handoff/Cast"
                              x:Name="HandoffButton"
                              Label="Cast"
                              Visibility="Collapsed"
                              Command="{Binding MediaCastingCommand}"
                              Foreground="{ThemeResource SystemControlForegroundChromeWhiteBrush}">
                </AppBarButton>
                <AppBarButton x:Name="SleepTimerButton" Icon="Clock"
                              Label="Sleep Timer"
                              Margin="0 0 5 0"
                              Visibility="Collapsed"
                              Foreground="{ThemeResource SystemControlForegroundChromeWhiteBrush}"
                              ToolTipService.ToolTip="Sleep Timer">
                    <AppBarButton.Flyout>
                        <Flyout>
                            <Grid x:Name="SleepTimerRootGrid" 
                                  DataContext="{Binding SleepTimerFragment, UpdateSourceTrigger=PropertyChanged}"
                                  Width="300">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="45" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0" Margin="5,5,5,5">
                                    <TextBlock Margin="10 0" Text="Sleep Timer"
                                       Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                       Style="{ThemeResource TitleTextBlockStyle}" />
                                </Grid>

                                <TextBlock Grid.Row="1" Margin="15 0"
                                       Style="{ThemeResource BodyTextBlockStyle}"
                                       Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}">
                                    <Span>
                                        <Run Text="Scheduled Time:" />
                                        <Run Text="{Binding EstimatedTime, UpdateSourceTrigger=PropertyChanged}" 
                                             Foreground="{ThemeResource SystemControlForegroundAccentBrush}" />
                                    </Span>
                                </TextBlock>

                                <ListView Grid.Row="2" Margin="15 0" Header="Time to wait:" 
                                          x:Name="SleepTimerTimeSelectionBox"
                                          ItemsSource="{Binding AvailableSleepItems, UpdateSourceTrigger=PropertyChanged}"
                                          SelectedItem="{Binding SelectedSleepItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          HorizontalAlignment="Stretch">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding DisplayName}" Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" />
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>

                <AppBarButton x:Name="MobileMoreMenuButton" Visibility="Visible" Icon="AllApps" Label="More">
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem ToolTipService.ToolTip="Handoff/Cast"
                                            Text="Handoff/Cast"
                                            Command="{Binding MediaCastingCommand}" />
                            <MenuFlyoutItem ToolTipService.ToolTip="Sleep Timer"
                                            Text="Sleep Timer" />
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </StackPanel>
        </Grid>

        <Grid x:Name="OverlayPanel" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
              Grid.RowSpan="3"
              Opacity=".95">
            <Grid.ChildrenTransitions>
                <TransitionCollection>
                    <RepositionThemeTransition />
                </TransitionCollection>
            </Grid.ChildrenTransitions>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ShellVisualStateGroup">
                <VisualState x:Name="DesktopVisualState">
                    <VisualState.StateTriggers>
                        <wst:AdaptiveTrigger x:Name="DesktopVisualStateTrigger" MinWindowWidth="1080" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="True" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="250" />
                        <Setter Target="RootSplitView.CompactPaneLength" Value="48" />


                        <Setter Target="InlineFrame.(Grid.Row)" Value="0" />
                        <Setter Target="InlineFrame.(Grid.RowSpan)" Value="2" />
                        <Setter Target="snackBarGrid.(Grid.Row)" Value="0" />
                        <Setter Target="snackBarGrid.(Grid.RowSpan)" Value="2" />
                        <Setter Target="snackBarGrid.Margin" Value="0 20 20 0" />
                        <Setter Target="snackBarGrid.HorizontalAlignment" Value="Right" />
                        <Setter Target="snackBarGrid.VerticalAlignment" Value="Top" />

                        <Setter Target="SleepTimerButton.Visibility" Value="Visible" />
                        <Setter Target="HandoffButton.Visibility" Value="Visible" />
                        <Setter Target="MobileMoreMenuButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="TabletVisualState">
                    <VisualState.StateTriggers>
                        <wst:AdaptiveTrigger x:Name="TabletVisualStateTrigger" MinWindowWidth="720" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="250" />
                        <Setter Target="RootSplitView.CompactPaneLength" Value="48" />


                        <Setter Target="InlineFrame.(Grid.Row)" Value="0" />
                        <Setter Target="InlineFrame.(Grid.RowSpan)" Value="2" />
                        <Setter Target="snackBarGrid.(Grid.Row)" Value="0" />
                        <Setter Target="snackBarGrid.(Grid.RowSpan)" Value="2" />
                        <Setter Target="snackBarGrid.Margin" Value="0 20 20 0" />
                        <Setter Target="snackBarGrid.HorizontalAlignment" Value="Right" />
                        <Setter Target="snackBarGrid.VerticalAlignment" Value="Top" />

                        <Setter Target="SleepTimerButton.Visibility" Value="Visible" />
                        <Setter Target="HandoffButton.Visibility" Value="Visible" />
                        <Setter Target="MobileMoreMenuButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="PhoneVisualState">
                    <VisualState.StateTriggers>
                        <wst:AdaptiveTrigger x:Name="PhoneVisualStateTrigger" MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="240" />

                        <Setter Target="InlineFrame.(Grid.Row)" Value="1" />
                        <Setter Target="InlineFrame.(Grid.RowSpan)" Value="1" />
                        <Setter Target="snackBarGrid.(Grid.Row)" Value="1" />
                        <Setter Target="snackBarGrid.(Grid.RowSpan)" Value="1" />
                        <Setter Target="snackBarGrid.Margin" Value="0" />
                        <Setter Target="snackBarGrid.HorizontalAlignment" Value="Stretch" />
                        <Setter Target="snackBarGrid.VerticalAlignment" Value="Bottom" />

                        <Setter Target="SleepTimerButton.Visibility" Value="Collapsed" />
                        <Setter Target="HandoffButton.Visibility" Value="Collapsed" />
                        <Setter Target="MobileMoreMenuButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
