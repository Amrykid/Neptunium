<Page
    x:Class="Neptunium.View.AppShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Neptunium.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wst="using:WindowsStateTriggers"
    xmlns:conv="using:Crystal3.UI.Converters"
    xmlns:ki="using:Kimono.Controls"
    xmlns:wrxt="using:WinRTXamlToolkit.Controls"
    x:Name="LayoutRoot"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <conv:BooleanToInverseBooleanConverter x:Key="BToIBConv" />

            <Style x:Key="ComAppBarStyle" TargetType="CommandBar">
                <Style.Setters>
                    <Setter Property="DefaultLabelPosition" Value="Bottom" />
                    <Setter Property="Background" Value="{ThemeResource SystemListAccentMediumColor}" />
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Tapped="nowPlayingAppBarGrid_Tapped"
                                  DataContext="{Binding NowPlayingView, UpdateSourceTrigger=PropertyChanged}">

                                    <Grid Visibility="{Binding CurrentStationLogo, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisConv}}" Margin="0"
                                          Height="50">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="60" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>


                                        <Image Height="60" Width="60" Stretch="Uniform" Margin="7,2,7,0" Grid.Column="0" VerticalAlignment="Top"
                                           Source="{Binding CurrentStationLogo, UpdateSourceTrigger=PropertyChanged}" />

                                        <TextBlock Grid.Column="1" Height="50">
                                        <Span>
                                            <Run Text="{Binding CurrentSong, UpdateSourceTrigger=PropertyChanged}" FontSize="16" />
                                        </Span>
                                        <LineBreak />
                                        <Span>
                                            <Run Text="{Binding CurrentArtist, UpdateSourceTrigger=PropertyChanged}" FontSize="15" /> 
                                        </Span>
                                        </TextBlock>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>

            <Style x:Key="XboxAppBarStyle" BasedOn="{StaticResource ComAppBarStyle}" TargetType="CommandBar">
                <Setter Property="ClosedDisplayMode" Value="Hidden" />
                <Setter Property="LightDismissOverlayMode" Value="On" />
                <Setter Property="DefaultLabelPosition" Value="Right" />
            </Style>

            <Flyout x:Key="HandOffDeviceFlyout" AllowFocusOnInteraction="True" LightDismissOverlayMode="On">
                <Grid DataContext="{Binding HandOffViewFragment, UpdateSourceTrigger=PropertyChanged}" Width="200">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20" />
                        <RowDefinition Height="300" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>

                    <ProgressBar IsIndeterminate="True" Grid.Row="0" />

                    <ListView x:Name="HandOffDeviceFlyout_DeviceListView" IsItemClickEnabled="True" Grid.Row="1" 
                              ItemsSource="{Binding AvailableDevices, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="DisplayName" ItemClick="HandOffDeviceFlyout_DeviceListView_ItemClick" 
                              SelectionMode="None" 
                              IsEnabled="{Binding IsBusy, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BToIBConv}}" />

                    <StackPanel Orientation="Horizontal" Grid.Row="2">

                    </StackPanel>

                </Grid>
            </Flyout>

            <Flyout x:Key="SleepTimerDeviceFlyout" AllowFocusOnInteraction="True" LightDismissOverlayMode="On">
                <Grid DataContext="{Binding SleepTimerViewFragment, UpdateSourceTrigger=PropertyChanged}">
                    <ListView x:Name="SleepTimerItemsListView" Header="Stop playing music after:" IsEnabled="{Binding IsViewEnabled, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding AvailableSleepItems, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="DisplayName" IsItemClickEnabled="True" ItemClick="SleepTimerItemsListView_ItemClick"
                              SelectedItem="{Binding SelectedSleepItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </Grid>
            </Flyout>
        </ResourceDictionary>
    </Page.Resources>



    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" x:Name="RootGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup CurrentStateChanged="VisualStateGroup_CurrentStateChanged">
                <VisualState x:Name="XboxVisualState">
                    <VisualState.StateTriggers>
                        <wst:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="200" />
                        <Setter Target="RootSplitView.CompactPaneLength" Value="48" />

                        <Setter Target="SplitViewContentGrid.Background" Value="Transparent" />

                        <Setter Target="MobileTogglePaneButton.Visibility" Value="Visible" />
                        <Setter Target="CurrentPaneTitle.Margin" Value="20 0" />
                        <Setter Target="CurrentPaneTitle.Style" Value="{ThemeResource SubheaderTextBlockStyle}" />
                        <Setter Target="CurrentPaneTitleRow.Height" Value="45" />

                        <Setter Target="upperAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="lowerAppBar.Visibility" Value="Visible" />

                        <Setter Target="lowerAppBar.Style" Value="{StaticResource XboxAppBarStyle}" />
                        <Setter Target="inlineFrame.Margin" Value="0" />

                        <Setter Target="MobileIconMenu.Visibility" Value="Collapsed" />

                        <Setter Target="SplitViewContentGrid_SecondRow.Height" Value="*" />
                        <Setter Target="SplitViewContentGrid_ThirdRow.Height" Value="Auto" />
                        <Setter Target="snackBarGrid.(Grid.Row)" Value="2" />
                        <Setter Target="inlineFrameGrid.(Grid.Row)" Value="1" />
                    </VisualState.Setters>
                </VisualState>
                
                
                <VisualState x:Name="DesktopVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="1080" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="True" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="200" />
                        <Setter Target="RootSplitView.CompactPaneLength" Value="48" />

                        <Setter Target="SplitViewContentGrid.Background" Value="Transparent" />

                        <Setter Target="MobileTogglePaneButton.Visibility" Value="Collapsed" />
                        <Setter Target="CurrentPaneTitle.Margin" Value="20 0" />
                        <Setter Target="CurrentPaneTitle.Style" Value="{ThemeResource SubheaderTextBlockStyle}" />
                        <Setter Target="CurrentPaneTitleRow.Height" Value="45" />

                        <Setter Target="upperAppBar.Visibility" Value="Visible" />
                        <Setter Target="lowerAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="lowerAppBar.Style" Value="{StaticResource ComAppBarStyle}" />

                        <Setter Target="inlineFrame.Margin" Value="0" />

                        <Setter Target="MobileIconMenu.Visibility" Value="Collapsed" />

                        <Setter Target="SplitViewContentGrid_SecondRow.Height" Value="*" />
                        <Setter Target="SplitViewContentGrid_ThirdRow.Height" Value="Auto" />
                        <Setter Target="snackBarGrid.(Grid.Row)" Value="2" />
                        <Setter Target="inlineFrameGrid.(Grid.Row)" Value="1" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="TabletVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="720" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="200" />
                        <Setter Target="RootSplitView.CompactPaneLength" Value="48" />

                        <Setter Target="SplitViewContentGrid.Background" Value="Transparent" />

                        <Setter Target="MobileTogglePaneButton.Visibility" Value="Collapsed" />
                        <Setter Target="CurrentPaneTitle.Margin" Value="20 0" />
                        <Setter Target="CurrentPaneTitle.Style" Value="{ThemeResource SubheaderTextBlockStyle}" />
                        <Setter Target="CurrentPaneTitleRow.Height" Value="45" />

                        <Setter Target="upperAppBar.Visibility" Value="Visible" />
                        <Setter Target="lowerAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="lowerAppBar.Style" Value="{StaticResource ComAppBarStyle}" />

                        <Setter Target="inlineFrame.Margin" Value="0" />

                        <Setter Target="MobileIconMenu.Visibility" Value="Collapsed" />

                        <Setter Target="SplitViewContentGrid_SecondRow.Height" Value="*" />
                        <Setter Target="SplitViewContentGrid_ThirdRow.Height" Value="Auto" />
                        <Setter Target="snackBarGrid.(Grid.Row)" Value="2" />
                        <Setter Target="inlineFrameGrid.(Grid.Row)" Value="1" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="PhoneVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="0" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="240" />

                        <Setter Target="SplitViewContentGrid.Background" Value="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" />

                        <Setter Target="MobileTogglePaneButton.Visibility" Value="Visible" />
                        <Setter Target="CurrentPaneTitle.Margin" Value="15 12.5" />
                        <Setter Target="CurrentPaneTitle.FontSize" Value="18" />
                        <Setter Target="CurrentPaneTitle.FontWeight" Value="Bold" />
                        <Setter Target="CurrentPaneTitleRow.Height" Value="50" />

                        <Setter Target="upperAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="lowerAppBar.Visibility" Value="Visible" />
                        <Setter Target="lowerAppBar.Style" Value="{StaticResource ComAppBarStyle}" />

                        <Setter Target="inlineFrame.Margin" Value="0" />

                        <Setter Target="MobileIconMenu.Visibility" Value="Visible" />

                        <Setter Target="SplitViewContentGrid_SecondRow.Height" Value="Auto" />
                        <Setter Target="SplitViewContentGrid_ThirdRow.Height" Value="*" />
                        <Setter Target="snackBarGrid.(Grid.Row)" Value="1" />
                        <Setter Target="inlineFrameGrid.(Grid.Row)" Value="2" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SplitView x:Name="RootSplitView" Margin="0 0 0 0" DisplayMode="CompactInline">
            <SplitView.Pane>
                <StackPanel x:Name="RootSplitViewPaneStackPanel">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource SplitViewTextBlockStyle}" />
                        <Style TargetType="RadioButton" BasedOn="{StaticResource SplitViewRadioButtonStyle}" />
                    </StackPanel.Resources>

                    <ToggleButton x:Name="TogglePaneButton"
                              TabIndex="1"
                              Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                              Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                              IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                              AutomationProperties.Name="Menu"
                              ToolTipService.ToolTip="Menu" />

                    <!-- font family = Segoe MDL2 Assets -->
                    <RadioButton GroupName="Navigation" Style="{StaticResource SplitViewRadioButtonStyle}" Content="Stations"
                                 Command="{Binding GoToStationsViewCommand}" x:Name="stationsNavButton">
                        <RadioButton.Tag>
                            <TextBlock Text="" FontSize="{StaticResource SplitViewLargeNavFontSize}" />
                        </RadioButton.Tag>
                    </RadioButton>
                    <RadioButton GroupName="Navigation" Style="{StaticResource SplitViewRadioButtonStyle}" Content="Now Playing"
                                 Command="{Binding GoToNowPlayingViewCommand}" x:Name="nowPlayingNavButton">
                        <RadioButton.Tag>
                            <TextBlock Text="" FontSize="{StaticResource SplitViewLargeNavFontSize}" />
                        </RadioButton.Tag>
                    </RadioButton>
                    <RadioButton GroupName="Navigation" Style="{StaticResource SplitViewRadioButtonStyle}" Content="Song History"
                                 Command="{Binding GoToSongHistoryViewCommand}" x:Name="songHistoryNavButton">
                        <RadioButton.Tag>
                            <TextBlock Text="" FontSize="{StaticResource SplitViewLargeNavFontSize}" />
                        </RadioButton.Tag>
                    </RadioButton>
                    <RadioButton GroupName="Navigation" Style="{StaticResource SplitViewRadioButtonStyle}" Content="Settings"
                                 Command="{Binding GoToSettingsViewCommand}" x:Name="settingsNavButton">
                        <RadioButton.Tag>
                            <TextBlock Text="" FontSize="{StaticResource SplitViewLargeNavFontSize}" />
                        </RadioButton.Tag>
                    </RadioButton>
                </StackPanel>
            </SplitView.Pane>

            <SplitView.Content>
                <Grid x:Name="SplitViewContentGrid" Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="CurrentPaneTitleRow" Height="75" />
                        <RowDefinition x:Name="SplitViewContentGrid_SecondRow" Height="Auto" />
                        <RowDefinition x:Name="SplitViewContentGrid_ThirdRow" Height="*" />
                        
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ToggleButton x:Name="MobileTogglePaneButton"
                                    TabIndex="1"
                                    Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                    Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                                    IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                                    Visibility="Collapsed"
                                    Grid.Column="0"
                                    AutomationProperties.Name="Menu"
                                    ToolTipService.ToolTip="Menu" />

                        <TextBlock x:Name="CurrentPaneTitle" Grid.Column="1" Style="{ThemeResource SubheaderTextBlockStyle}" />

                        <StackPanel x:Name="MobileIconMenu" Visibility="Visible" Orientation="Horizontal" Grid.Column="2">
                            <StackPanel.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                                    <Setter Property="FontSize" Value="20" />
                                    <Setter Property="MinHeight" Value="48" />
                                    <Setter Property="MinWidth" Value="48" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Top" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Background" Value="Transparent" />
                                </Style>
                            </StackPanel.Resources>
                            <StackPanel.Transitions>
                                <TransitionCollection>
                                    <AddDeleteThemeTransition />
                                    <ContentThemeTransition />
                                </TransitionCollection>
                            </StackPanel.Transitions>
                            <Button x:Name="CarModeButton" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                    Content="" Visibility="{Binding ShowCarModeStatusButton, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVisConv}}"/>
                        </StackPanel>
                    </Grid>

                    <Grid x:Name="snackBarGrid" Grid.Row="1">
                        <Grid.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition />
                            </TransitionCollection>
                        </Grid.Transitions>
                    </Grid>

                    <Grid x:Name="inlineFrameGrid" Grid.Row="2">
                        <Grid.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition />
                            </TransitionCollection>
                        </Grid.Transitions>
                        
                        <Frame x:Name="inlineFrame">
                            <Frame.ContentTransitions>
                                <TransitionCollection>
                                    <NavigationThemeTransition>
                                        <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                            <EntranceNavigationTransitionInfo />
                                        </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                    </NavigationThemeTransition>
                                </TransitionCollection>
                            </Frame.ContentTransitions>
                        </Frame>
                    </Grid>
                </Grid>
            </SplitView.Content>
        </SplitView>

        <Grid Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisConv}, UpdateSourceTrigger=PropertyChanged}" 
              Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
              Opacity=".9" x:Name="ConnectingStatusGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="Connecting..." />
                <ProgressRing Height="50" Width="50"  IsActive="True"/>
            </StackPanel>
        </Grid>
    </Grid>

    <Page.TopAppBar>
        <CommandBar x:Name="upperAppBar" Style="{StaticResource ComAppBarStyle}">
            <CommandBar.PrimaryCommands>
                <AppBarButton Icon="Play" Label="Play" Tag="PlayPause" Command="{Binding PlayCommand}" />
                <AppBarButton Label="Handoff" Icon="Remote" Flyout="{StaticResource HandOffDeviceFlyout}" />
                <AppBarButton Label="Sleep Timer" Icon="Clock" Flyout="{StaticResource SleepTimerDeviceFlyout}" />
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </Page.TopAppBar>
    <Page.BottomAppBar>
        <CommandBar x:Name="lowerAppBar" Style="{StaticResource ComAppBarStyle}">
            <CommandBar.PrimaryCommands>
                <AppBarButton Icon="Play" Label="Play" Tag="PlayPause" Command="{Binding PlayCommand}" />
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton Label="Handoff" Icon="Remote" Flyout="{StaticResource HandOffDeviceFlyout}" />
                <AppBarButton Label="Sleep Timer" Icon="Clock" Flyout="{StaticResource SleepTimerDeviceFlyout}" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
