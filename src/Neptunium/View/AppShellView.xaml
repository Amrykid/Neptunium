<Page
    x:Class="Neptunium.View.AppShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Neptunium.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wst="using:WindowsStateTriggers"
    xmlns:conv="using:Crystal3.UI.Converters"
    xmlns:ki="using:Kimono.Controls"
    x:Name="LayoutRoot"
    mc:Ignorable="d" RequestedTheme="Dark">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <DataTemplate x:Name="NowPlayingPanelTemplate">
                <Grid DataContext="{Binding NowPlayingView, UpdateSourceTrigger=PropertyChanged}">
                    <Grid Visibility="{Binding CurrentStation, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InvNullToVisConv}}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Black">
                        <TextBlock Text="No station was selected." VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="WrapWholeWords" />
                    </Grid>


                    <ScrollViewer>
                        <Grid Visibility="{Binding CurrentStation, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisConv}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" x:Name="StationInfoPanel" Margin="20 5">
                                <TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Center" Text="{Binding CurrentStation.Title, UpdateSourceTrigger=PropertyChanged}" />
                                <Image Source="{Binding CurrentStation.Logo, UpdateSourceTrigger=PropertyChanged}" 
                                    HorizontalAlignment="Stretch" Height="150" Stretch="Uniform" />
                            </Grid>

                            <StackPanel x:Name="SongInfoPanel" Width="600" Grid.Row="1">
                                <TextBlock Style="{ThemeResource SubheaderTextBlockStyle}" Margin="20 10 0 0">Song Info</TextBlock>
                                <TextBlock Text="{Binding SongMetadata, UpdateSourceTrigger=PropertyChanged}" 
                                           Margin="20 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left" />

                                <Grid x:Name="extendedSongInfoGrid"
                                      Margin="20 10 0 0"
                                      Visibility="{Binding CurrentSongAlbumData, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisConv}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" MaxHeight="250" />
                                        <RowDefinition Height="50" />
                                        <RowDefinition Height="50" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Text="Album Info" Style="{ThemeResource SubheaderTextBlockStyle}" />
                                    <Image Grid.Row="1" 
                                           Stretch="Uniform"
                                           MaxHeight="250"
                                           HorizontalAlignment="Left"
                                           Source="{Binding CurrentSongAlbumData.AlbumCoverUrl, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StrUriConv}}" />
                                    <TextBlock Grid.Row="2" Style="{ThemeResource BaseTextBlockStyle}"
                                               Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}">
                                        <Span>
                                            <Run Text="{Binding CurrentSongAlbumData.Album, UpdateSourceTrigger=PropertyChanged}" />
                                            <Run Text="by" />
                                            <Run Text="{Binding CurrentSongAlbumData.Artist, UpdateSourceTrigger=PropertyChanged}" />
                                        </Span>
                                    </TextBlock>
                                    <TextBlock Grid.Row="3" Style="{ThemeResource BodyTextBlockStyle}" 
                                               Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" FontSize="18" LineHeight="22">
                                        <Span>
                                            <Run Text="Released: " />
                                            <Run Text="{Binding CurrentSongAlbumData.ReleaseDate, UpdateSourceTrigger=PropertyChanged}" />
                                        </Span>
                                    </TextBlock>
                                    <Button Grid.Row="4" Content="View on MusicBrainz" Command="{Binding ViewAlbumOnMusicBrainzCommand}" />
                                </Grid>
                            </StackPanel>

                            <Grid x:Name="SongHistoryPanel" Width="600" Grid.Row="2" Visibility="Collapsed">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Style="{ThemeResource TitleTextBlockStyle}" Margin="20 10 0 0">Song History</TextBlock>

                                <ListView ItemsSource="{Binding HistoryItems, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Margin="10 10 0 0">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="300" />
                                                    <ColumnDefinition Width="30" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Text="{Binding Song, Mode=OneTime}" Grid.Column="0" />

                                                <TextBlock Text="{Binding Time, Mode=OneTime}" Grid.Column="1" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>

                        </Grid>
                    </ScrollViewer>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>



    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" x:Name="RootGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup CurrentStateChanged="VisualStateGroup_CurrentStateChanged">
                <VisualState x:Name="XboxVisualState">
                    <VisualState.StateTriggers>
                        <wst:DeviceFamilyStateTrigger DeviceFamily="Xbox" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="200" />
                        <Setter Target="RootSplitView.CompactPaneLength" Value="48" />

                        <Setter Target="SplitViewContentGrid.Background" Value="Transparent" />

                        <Setter Target="MobileTogglePaneButton.Visibility" Value="Visible" />
                        <Setter Target="CurrentPaneTitle.Margin" Value="20 0" />
                        <Setter Target="CurrentPaneTitle.Style" Value="{ThemeResource SubheaderTextBlockStyle}" />
                        <Setter Target="CurrentPaneTitleRow.Height" Value="45" />

                        <Setter Target="DesktopNowPlayingPanel.Visibility" Value="Collapsed" />
                        <Setter Target="MobileNowPlayingPanel.Visibility" Value="Collapsed" />

                        <Setter Target="upperAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="lowerAppBar.Visibility" Value="Visible" />

                        <Setter Target="lowerAppBar.Style" Value="{StaticResource XboxAppBarStyle}" />
                        <Setter Target="inlineFrame.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                
                
                <VisualState x:Name="DesktopVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="1080" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="True" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="200" />
                        <Setter Target="RootSplitView.CompactPaneLength" Value="48" />

                        <Setter Target="SplitViewContentGrid.Background" Value="Transparent" />

                        <Setter Target="MobileTogglePaneButton.Visibility" Value="Collapsed" />
                        <Setter Target="CurrentPaneTitle.Margin" Value="20 0" />
                        <Setter Target="CurrentPaneTitle.Style" Value="{ThemeResource SubheaderTextBlockStyle}" />
                        <Setter Target="CurrentPaneTitleRow.Height" Value="45" />

                        <Setter Target="DesktopNowPlayingPanel.Visibility" Value="Visible" />
                        <Setter Target="MobileNowPlayingPanel.Visibility" Value="Collapsed" />

                        <Setter Target="upperAppBar.Visibility" Value="Visible" />
                        <Setter Target="lowerAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="lowerAppBar.Style" Value="{StaticResource ComAppBarStyle}" />

                        <Setter Target="inlineFrame.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="TabletVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="720" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="RootSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="200" />
                        <Setter Target="RootSplitView.CompactPaneLength" Value="48" />

                        <Setter Target="SplitViewContentGrid.Background" Value="Transparent" />

                        <Setter Target="MobileTogglePaneButton.Visibility" Value="Collapsed" />
                        <Setter Target="CurrentPaneTitle.Margin" Value="20 0" />
                        <Setter Target="CurrentPaneTitle.Style" Value="{ThemeResource SubheaderTextBlockStyle}" />
                        <Setter Target="CurrentPaneTitleRow.Height" Value="45" />

                        <Setter Target="DesktopNowPlayingPanel.Visibility" Value="Visible" />
                        <Setter Target="MobileNowPlayingPanel.Visibility" Value="Collapsed" />

                        <Setter Target="upperAppBar.Visibility" Value="Visible" />
                        <Setter Target="lowerAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="lowerAppBar.Style" Value="{StaticResource ComAppBarStyle}" />

                        <Setter Target="inlineFrame.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="PhoneVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="0" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="RootSplitView.OpenPaneLength" Value="240" />

                        <Setter Target="SplitViewContentGrid.Background" Value="{Binding ElementName=RootSplitView, Path=PaneBackground, UpdateSourceTrigger=PropertyChanged}" />

                        <Setter Target="MobileTogglePaneButton.Visibility" Value="Visible" />
                        <Setter Target="CurrentPaneTitle.Margin" Value="15 12.5" />
                        <Setter Target="CurrentPaneTitle.FontSize" Value="18" />
                        <Setter Target="CurrentPaneTitle.FontWeight" Value="Bold" />
                        <Setter Target="CurrentPaneTitleRow.Height" Value="50" />

                        <Setter Target="DesktopNowPlayingPanel.Visibility" Value="Collapsed" />
                        <Setter Target="MobileNowPlayingPanel.Visibility" Value="Visible" />

                        <Setter Target="upperAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="lowerAppBar.Visibility" Value="Visible" />
                        <Setter Target="lowerAppBar.Style" Value="{StaticResource ComAppBarStyle}" />

                        <Setter Target="inlineFrame.Margin" Value="0 0 0 10" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SplitView x:Name="RootSplitView" Margin="0 0 0 0" DisplayMode="CompactInline">
            <SplitView.Pane>
                <StackPanel x:Name="RootSplitViewPaneStackPanel">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource SplitViewTextBlockStyle}" />
                        <Style TargetType="RadioButton" BasedOn="{StaticResource SplitViewRadioButtonStyle}" />
                    </StackPanel.Resources>

                    <ToggleButton x:Name="TogglePaneButton"
                              TabIndex="1"
                              Foreground="White"
                              Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                              IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                              AutomationProperties.Name="Menu"
                              ToolTipService.ToolTip="Menu" />

                    <!-- font family = Segoe MDL2 Assets -->
                    <RadioButton GroupName="Navigation" Style="{StaticResource SplitViewRadioButtonStyle}" Content="Stations"
                                 Command="{Binding GoToStationsViewCommand}" x:Name="stationsNavButton">
                        <RadioButton.Tag>
                            <TextBlock Text="" FontSize="{StaticResource SplitViewLargeNavFontSize}" />
                        </RadioButton.Tag>
                    </RadioButton>
                    <RadioButton GroupName="Navigation" Style="{StaticResource SplitViewRadioButtonStyle}" Content="Song History"
                                 Command="{Binding GoToSongHistoryViewCommand}" x:Name="songHistoryNavButton">
                        <RadioButton.Tag>
                            <TextBlock Text="" FontSize="{StaticResource SplitViewLargeNavFontSize}" />
                        </RadioButton.Tag>
                    </RadioButton>
                    <RadioButton GroupName="Navigation" Style="{StaticResource SplitViewRadioButtonStyle}" Content="Settings"
                                 Command="{Binding GoToSettingsViewCommand}" x:Name="settingsNavButton">
                        <RadioButton.Tag>
                            <TextBlock Text="" FontSize="{StaticResource SplitViewLargeNavFontSize}" />
                        </RadioButton.Tag>
                    </RadioButton>
                </StackPanel>
            </SplitView.Pane>

            <SplitView.Content>
                <Grid x:Name="SplitViewContentGrid" Background="{Binding ElementName=RootSplitView, Path=PaneBackground, UpdateSourceTrigger=PropertyChanged}">
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="CurrentPaneTitleRow" Height="75" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <ToggleButton x:Name="MobileTogglePaneButton"
                                    TabIndex="1"
                                    Foreground="White"
                                    Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                                    IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                                    Visibility="Collapsed"
                                    Grid.Column="0"
                                    AutomationProperties.Name="Menu"
                                    ToolTipService.ToolTip="Menu" />

                        <TextBlock x:Name="CurrentPaneTitle" Grid.Column="1" Style="{ThemeResource SubheaderTextBlockStyle}" />
                    </Grid>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Frame x:Name="inlineFrame" Grid.Column="0">
                            <Frame.ContentTransitions>
                                <TransitionCollection>
                                    <NavigationThemeTransition>
                                        <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                            <EntranceNavigationTransitionInfo />
                                        </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                    </NavigationThemeTransition>
                                </TransitionCollection>
                            </Frame.ContentTransitions>
                        </Frame>

                        <ki:GripperPanel x:Name="MobileNowPlayingPanel" Visibility="Visible" Grid.Column="0" Grid.ColumnSpan="2" CollapsedHeight="20">
                            <ki:GripperPanel.PanelContent>
                                <ContentPresenter ContentTemplate="{StaticResource NowPlayingPanelTemplate}" />
                            </ki:GripperPanel.PanelContent>
                        </ki:GripperPanel>

                        <ContentPresenter x:Name="DesktopNowPlayingPanel" Width="400" Grid.Column="1" Visibility="Collapsed" ContentTemplate="{StaticResource NowPlayingPanelTemplate}" />
                    </Grid>
                </Grid>
            </SplitView.Content>
        </SplitView>

        <Grid Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisConv}, UpdateSourceTrigger=PropertyChanged}" 
              Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
              Opacity=".9" x:Name="ConnectingStatusGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="Connecting..." />
                <ProgressRing Height="50" Width="50"  IsActive="True"/>
            </StackPanel>
        </Grid>
    </Grid>

    <Page.TopAppBar>
        <CommandBar x:Name="upperAppBar" Style="{StaticResource ComAppBarStyle}">
            <CommandBar.PrimaryCommands>
                <AppBarButton Icon="Play" Label="Play" Tag="PlayPause" Command="{Binding PlayCommand}" />
                <AppBarButton Label="Handoff" Command="{Binding HandoffStationCommand}" Icon="Remote"/>
                <AppBarButton Label="Sleep Timer" Icon="Clock" />
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </Page.TopAppBar>
    <Page.BottomAppBar>
        <CommandBar x:Name="lowerAppBar" Style="{StaticResource ComAppBarStyle}">
            <CommandBar.PrimaryCommands>
                <AppBarButton Icon="Play" Label="Play" Tag="PlayPause" Command="{Binding PlayCommand}" />
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton Label="Handoff" Command="{Binding HandoffStationCommand}" Icon="Remote"/>
                <AppBarButton Label="Sleep Timer" Icon="Clock" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
