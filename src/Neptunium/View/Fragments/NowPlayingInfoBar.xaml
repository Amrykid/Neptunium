<UserControl
    x:Class="Neptunium.View.Fragments.NowPlayingInfoBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Neptunium.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:conv="using:Crystal3.UI.Converters"
    xmlns:wst="using:WindowsStateTriggers"
    xmlns:uwpcon="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    x:Name="thisControl"
    Height="Auto"
    MinHeight="64">

    <UserControl.Resources>

        <conv:BooleanToInverseBooleanConverter x:Key="BToIBConv" />

        <Flyout x:Key="HandOffDeviceFlyout" AllowFocusOnInteraction="True" LightDismissOverlayMode="On">
            <Grid DataContext="{Binding HandOffViewFragment, UpdateSourceTrigger=PropertyChanged}" Width="200">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="300" />
                    <RowDefinition Height="50" />
                </Grid.RowDefinitions>

                <ProgressBar IsIndeterminate="{Binding IsBusy, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" />

                <ListView x:Name="HandOffDeviceFlyout_DeviceListView" IsItemClickEnabled="True" Grid.Row="1" 
                          ItemsSource="{Binding AvailableDevices, UpdateSourceTrigger=PropertyChanged}"
                          DisplayMemberPath="DisplayName" ItemClick="HandOffDeviceFlyout_DeviceListView_ItemClick" 
                          SelectionMode="None"
                          Header="Hand Off Devices:"
                          IsEnabled="{Binding IsBusy, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BToIBConv}}" />

                <StackPanel Orientation="Horizontal" Grid.Row="2">

                </StackPanel>

            </Grid>
        </Flyout>

        <Flyout x:Key="SleepTimerDeviceFlyout" AllowFocusOnInteraction="True" LightDismissOverlayMode="On">
            <Grid DataContext="{Binding SleepTimerViewFragment, UpdateSourceTrigger=PropertyChanged}">
                <ListView x:Name="SleepTimerItemsListView" Header="Stop playing music after:" 
                          IsEnabled="{Binding IsViewEnabled, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding AvailableSleepItems, UpdateSourceTrigger=PropertyChanged}"
                          DisplayMemberPath="DisplayName" IsItemClickEnabled="True" ItemClick="SleepTimerItemsListView_ItemClick"
                          SelectedItem="{Binding SelectedSleepItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
            </Grid>
        </Flyout>
    </UserControl.Resources>

    <Grid RequestedTheme="Dark">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup CurrentStateChanged="VisualStateGroup_CurrentStateChanged">
                <VisualState x:Name="TabletVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="720" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="NowPlayingCol.Width" Value="320" />
                        <Setter Target="MediaControlCol.Width" Value="Auto" />

                        <Setter Target="StationLogoImg.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="LargePhoneVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="480" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NowPlayingCol.Width" Value="260" />
                        <Setter Target="MediaControlCol.Width" Value="Auto" />

                        <Setter Target="StationLogoImg.Visibility" Value="Visible" />
                        <Setter Target="TrackRun.FontSize" Value="16" />
                        <Setter Target="ArtistRun.FontSize" Value="15" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SmallPhoneVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="360" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NowPlayingCol.Width" Value="160" />
                        <Setter Target="MediaControlCol.Width" Value="Auto" />

                        <Setter Target="StationLogoImg.Visibility" Value="Collapsed" />
                        <Setter Target="TrackRun.FontSize" Value="14" />
                        <Setter Target="ArtistRun.FontSize" Value="12" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <local:GlassPanel x:Name="PART_GlassPane" />

        <Grid x:Name="LayoutRoot">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="NowPlayingCol" Width="320"/>
                <ColumnDefinition Width="*" />
                <ColumnDefinition x:Name="MediaControlCol" Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" x:Name="NowPlayingGrid">
                <Grid.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}" />
                        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
                        <Setter Property="Padding" Value="8,4,8,4" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                        <Setter Property="UseSystemFocusVisuals" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="PointerOver">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                                                       Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid"
                                                                                       Storyboard.TargetProperty="Background">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="Foreground">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                                       Storyboard.TargetProperty="BorderBrush">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <ContentPresenter x:Name="ContentPresenter"
                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                          Content="{TemplateBinding Content}"
                                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          Padding="{TemplateBinding Padding}"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          AutomationProperties.AccessibilityView="Raw"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Grid.Resources>
                
                <Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"
                        Command="{Binding GoToNowPlayingPageCommand, UpdateSourceTrigger=PropertyChanged}"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center">
                    <Grid Visibility="{Binding CurrentStationLogo, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToVisConv}}" Margin="0"
                          Height="50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>


                        <uwpcon:ImageEx Height="60" Width="60" Stretch="Uniform" 
                                        x:Name="StationLogoImg"
                                        IsCacheEnabled="True"
                                        Visibility="Visible"
                                        Margin="7,0,7,0" Grid.Column="0" VerticalAlignment="Top"
                                        Source="{Binding CurrentStationLogo, UpdateSourceTrigger=PropertyChanged}">
                        </uwpcon:ImageEx>


                        <StackPanel Grid.Column="1" MaxHeight="50" Height="Auto" VerticalAlignment="Center">
                            <TextBlock x:Name="TrackRun" Text="{Binding CurrentSong, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{ThemeResource BaseTextBlockStyle}"
                                       TextTrimming="Clip"
                                       TextWrapping="NoWrap"
                                       Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}">
                            </TextBlock>
                            <TextBlock x:Name="ArtistRun" Text="{Binding CurrentArtist, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{ThemeResource BodyTextBlockStyle}"
                                       Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}">
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </Button>
            </Grid>

            <StackPanel x:Name="MediaControlsPanel" Orientation="Horizontal" Grid.Column="2" VerticalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="AppBarButton">
                        <Setter Property="IsCompact" Value="True" />
                        <Setter Property="LabelPosition" Value="Collapsed" />
                    </Style>
                </StackPanel.Resources>

                <AppBarButton Icon="Play" ToolTipService.ToolTip="Play" Tag="PlayPause" x:Name="PlayPauseButton" Command="{Binding PlayCommand}" />
                <AppBarButton ToolTipService.ToolTip="Handoff" Icon="Remote" x:Name="lowerAppBarHandOffButton" Flyout="{StaticResource HandOffDeviceFlyout}" />
                <AppBarButton ToolTipService.ToolTip="Sleep Timer" Icon="Clock" x:Name="lowerAppBarSleepTimerButton" 
                              IsEnabled="{Binding SleepTimerViewFragment.IsViewEnabled, UpdateSourceTrigger=PropertyChanged}"
                              Flyout="{StaticResource SleepTimerDeviceFlyout}" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
