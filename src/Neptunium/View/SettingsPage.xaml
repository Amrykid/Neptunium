<Page
    x:Class="Neptunium.View.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Neptunium.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wrt="using:WinRTXamlToolkit.Controls"
    xmlns:wst="using:WindowsStateTriggers"
    Loaded="Page_Loaded"
    mc:Ignorable="d">

    <Page.Resources>
        <Style TargetType="TextBlock"      
               x:Key="GroupHeaderTextBlockStyle"
               BasedOn="{StaticResource SubtitleTextBlockStyle}">
            <Setter Property="Margin" Value="0 0 0 15" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" />
        </Style>
        <Style TargetType="MenuFlyoutSeparator">
            <Setter Property="Margin" Value="-10 10" />
        </Style>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Pivot x:Name="RootPivot" Pivot.IsHeaderItemsCarouselEnabled="False">
            <PivotItem Header="General">
                <ScrollViewer>
                    <StackPanel Margin="10 0">
                        <TextBlock Style="{StaticResource GroupHeaderTextBlockStyle}"
                               Text="Notifications"/>
                        <ToggleSwitch Header="Show song change notifications"
                                  IsOn="{Binding ShowSongNotification, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <MenuFlyoutSeparator />
                        <TextBlock Style="{StaticResource GroupHeaderTextBlockStyle}"
                               Text="Metadata"/>
                        <ToggleSwitch Header="Find song metadata when song changes" 
                                  IsOn="{Binding FindSongMetadata, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <ToggleSwitch Header="Update LockScreen with artwork when available"
                                  x:Name="UpdateLockScreenSwitch"
                                  Visibility="Collapsed"
                                  IsOn="{Binding UpdateLockScreenWithSongArt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        <StackPanel Height="450" Visibility="{Binding ElementName=UpdateLockScreenSwitch, Path=Visibility, UpdateSourceTrigger=PropertyChanged}">
                            <TextBlock Style="{StaticResource CaptionTextBlockStyle}"
                                   Margin="0 0 0 10"
                                   Text="Set a lock screen image that we'll use when we cannot find artwork for the current song. We recommend selecting your lockscreen image."/>

                            <Image MaxHeight="300" Source="{Binding FallBackLockScreenArtworkUri, UpdateSourceTrigger=PropertyChanged}" Margin="0 10" />

                            <Button Content="Set Fallback Lockscreen" x:Name="SetFallBackLockScreenBtn" Click="SetFallBackLockScreenBtn_Click" />
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </PivotItem>
            <PivotItem x:Name="bluetoothPivot" Header="Bluetooth" IsEnabled="False">
                <StackPanel Margin="10 0">
                    <TextBlock Style="{StaticResource GroupHeaderTextBlockStyle}"
                               Text="Activation"/>

                    <TextBlock Text="Activate Bluetooth features when connected to this device."
                               Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"
                               TextWrapping="Wrap" Margin="0 0 0 5" />

                    <TextBlock>
                        <Run Text="Selected Bluetooth Device: " />
                        <Run Text="{Binding SelectedBluetoothDeviceName, UpdateSourceTrigger=PropertyChanged}"
                             Foreground="{ThemeResource SystemControlForegroundAccentBrush}" />
                    </TextBlock>

                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <Button x:Name="SelectBluetoothButton" Click="SelectBluetoothButton_Click" Content="Select Device" />
                        <Button Content="Clear Device" Margin="5 0" Command="{Binding ClearBluetoothDeviceCommand}" />
                    </StackPanel>
                    <MenuFlyoutSeparator />

                    <TextBlock Style="{StaticResource GroupHeaderTextBlockStyle}"
                               Text="Options" />

                    <ToggleSwitch Header="Announce song when the song playing changes."
                                  IsOn="{Binding SaySongNotifications, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>
            </PivotItem>
        </Pivot>
    </Grid>

    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
            <VisualState x:Name="TabletOrHigherVisualState">
                <!--this should include Xbox-->
                <VisualState.StateTriggers>
                    <wst:AdaptiveTrigger MinWindowWidth="720" />
                </VisualState.StateTriggers>

                <VisualState.Setters>
                    <Setter Target="RootPivot.(Pivot.IsHeaderItemsCarouselEnabled)" Value="False" />
                </VisualState.Setters>
            </VisualState>

            <VisualState x:Name="PhoneVisualState">
                <VisualState.StateTriggers>
                    <wst:AdaptiveTrigger MinWindowWidth="0" />
                </VisualState.StateTriggers>

                <VisualState.Setters>
                    <Setter Target="RootPivot.(Pivot.IsHeaderItemsCarouselEnabled)" Value="True" />
                </VisualState.Setters>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
</Page>
