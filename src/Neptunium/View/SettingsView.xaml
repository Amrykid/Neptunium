<Page
    x:Class="Neptunium.View.SettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Neptunium.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:wst="using:WindowsStateTriggers"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="TabletVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="720" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="PageTitleBlock.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="PhoneVisualState">
                    <VisualState.StateTriggers>
                        <wst:CompositeStateTrigger Operator="And">
                            <wst:AdaptiveTrigger MinWindowWidth="0" />
                            <wst:CompositeStateTrigger Operator="Or">
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                                <wst:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                            </wst:CompositeStateTrigger>
                        </wst:CompositeStateTrigger>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PageTitleBlock.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock Margin="20 0" Style="{ThemeResource SubheaderTextBlockStyle}" 
                   Height="45" Grid.Row="0" 
                   Visibility="Collapsed" Text="Settings" x:Name="PageTitleBlock" />

        <Pivot x:Name="mainPivot" Grid.Row="1">
            <PivotItem Header="General">
                <StackPanel>
                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Metadata" />
                    <CheckBox Content="Fetch metadata when the song changes." IsChecked="{Binding ShouldFetchSongMetadata, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    
                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Notifications" />
                    <CheckBox Content="Show song notifications" IsChecked="{Binding ShouldShowSongNofitications, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    
                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Continuous App Experience (Handoff)" />
                    <CheckBox Content="Stop playing on this device after successful handoff." 
                              IsChecked="{Binding ShouldStopPlayingAfterSuccessfulHandoff, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Haptic Feedback" />
                    <CheckBox Content="Use haptic feedback for in-app buttons." IsEnabled="{Binding IsOnMobile, UpdateSourceTrigger=PropertyChanged}" 
                              IsChecked="{Binding ShouldUseHapticFeedback, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </StackPanel>
            </PivotItem>
            <PivotItem Header="UI">
                <StackPanel>
                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="General" />
                    <CheckBox Content="When launching from a tile or url to play a station, navigate to that station." 
                              IsChecked="{Binding ShouldNavigateToStationPageWhenLaunching, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Media Bar" />
                    <CheckBox Content="Media bar should match station's logo color." IsChecked="{Binding ShouldHaveMediaBarMatchStationColor, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </StackPanel>
            </PivotItem>
            <PivotItem Header="Media">
                <StackPanel>
                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Behaviors" />
                    <CheckBox Content="Prefer cross fading when changing stations." 
                              IsChecked="{Binding ShouldPreferCrossFadingOnStationTransition, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </StackPanel>
            </PivotItem>
            <PivotItem Header="Car Mode" x:Name="carModePivotItem">
                <StackPanel>
                    <TextBlock FontSize="26" FontFamily="{ThemeResource SymbolThemeFontFamily}" Margin="5 0 0 5">
                            <Span>
                                <Run Text=" " />
                                <Run x:Name="carModeStatusIndicatorRun" Text="" />
                                <Run Text=" " Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" />
                            </Span>
                        </TextBlock>
                        <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Activation" />
                    <TextBlock>
                        <Span>
                            <Run Text="Selected Device:" />
                            <Run Text="{Binding SelectedBluetoothDevice, UpdateSourceTrigger=PropertyChanged}" Foreground="{ThemeResource SystemControlForegroundAccentBrush}" />
                        </Span>
                    </TextBlock>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Pick Bluetooth Device" Command="{Binding PickCarModeDeviceCommand}" Margin="0 0 5 0" />
                        <Button Content="Clear Device" Command="{Binding ClearCarModeDeviceCommand}" Margin="0 0 5 0" />
                    </StackPanel>

                    <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Options" />
                    <CheckBox Content="Announce Songs" x:Name="announcedSongsCb" IsChecked="{Binding CarModeAnnounceSongs, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                    <ComboBox ItemsSource="{Binding PossibleAnnouncementFrequencyOptions}" 
                              Header="Announcement Frequency"
                              IsEnabled="{Binding ElementName=announcedSongsCb, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" 
                              SelectedItem="{Binding SelectedAnnouncementFrequencyOption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox Content="Use Japanese Voice" 
                              IsEnabled="{Binding ElementName=announcedSongsCb, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}" 
                              IsChecked="{Binding JapaneseVoiceForSongAnnouncements, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                </StackPanel>
            </PivotItem>
        </Pivot>
    </Grid>
</Page>
